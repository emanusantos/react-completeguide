{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emanu\\\\Desktop\\\\Lucas\\\\react-complete-guide\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  ;\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    ;\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid e-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"ZGcGtGsd3M9mFOw0Nl40N42P5Is=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/emanu/Desktop/Lucas/react-complete-guide/01-starting-project/src/components/SimpleInput.js"],"names":["useState","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","nameInputIsInvalid","enteredNameTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","setEnteredName","target","emailInputChangeHandler","nameInputBlurHandler","setEnteredNameTouched","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n\n  const { \n    value: enteredName, \n    hasError: nameInputHasError, \n    valueChangeHandler: nameChangeHandler, \n    inputBlurHandler: nameBlurHandler \n  } = useInput(value => value.trim() !== '');\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n    if (enteredNameIsValid && enteredEmailIsValid) {\n      formIsValid = true;\n    };\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    };\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} value={enteredName} />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n        <label htmlFor='email'>Your Email</label>\n        <input type='email' id='email' onChange={emailInputChangeHandler} onBlur={emailInputBlurHandler} value={enteredEmail} />\n        {emailInputIsInvalid && <p className=\"error-text\">Please enter a valid e-mail</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}