{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.to;\n\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartAcions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/emanu/Desktop/Lucas/react-complete-guide/adv-redux/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","to","push","itemId","price","quantity","totalPrice","removeItemToCart","changed","filter","cartAcions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AACdC,IAAAA,aAAa,EAAE;AADD,GAFY;AAK1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAArB;AACAP,MAAAA,KAAK,CAACQ,EAAN;;AACA,UAAI,CAACJ,YAAL,EAAmB;AACfJ,QAAAA,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAiB;AAAEC,UAAAA,MAAM,EAAER,OAAO,CAACK,EAAlB;AAAsBI,UAAAA,KAAK,EAAET,OAAO,CAACS,KAArC;AAA4CC,UAAAA,QAAQ,EAAE,CAAtD;AAAyDC,UAAAA,UAAU,EAAEX,OAAO,CAACS;AAA7E,SAAjB;AACH,OAFD,MAEO;AACHP,QAAAA,YAAY,CAACQ,QAAb;AACAR,QAAAA,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACS,UAAb,GAA0BX,OAAO,CAACS,KAA5D;AACH;AACJ,KAXK;;AAYNG,IAAAA,gBAAgB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;AACAG,MAAAA,KAAK,CAACe,OAAN,GAAgB,IAAhB;;AACA,UAAIX,YAAY,KAAK,CAArB,EAAwB;AACpBJ,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYoB,MAAZ,CAAmBV,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACH,OAFD,MAEO;AACHH,QAAAA,YAAY,CAACQ,QAAb;AACAR,QAAAA,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACO,KAAjE;AACH;AACJ;;AAvBK;AALgB,CAAD,CAA7B;AAgCA,OAAO,MAAMM,UAAU,GAAGxB,SAAS,CAACyB,OAA7B;AACP,eAAezB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: { items: [], \r\n    totalQuantity: 0, \r\n    },\r\n    reducers: {\r\n        addItemToCart(state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id);\r\n            state.to\r\n            if (!existingItem) {\r\n                state.items.push({ itemId: newItem.id, price: newItem.price, quantity: 1, totalPrice: newItem.price });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n            }\r\n        },\r\n        removeItemToCart(state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n            if (existingItem === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const cartAcions = cartSlice.actions;\r\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}